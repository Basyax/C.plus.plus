#include <iostream>  // Підключення бібліотеки для вводу/виводу
using namespace std; // Використання простору імен std для зручності (без префіксу std::)

// Функція для Завдання 1: Визначити кількість парних чисел у кожному рядку
void task1() {
    const int m = 4, n = 3;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 4x3 для зберігання цілих чисел

    cout << "Завдання 1: Введіть елементи масиву (4x3):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    for (int i = 0; i < m; i++) {         // Зовнішній цикл для обробки кожного рядка
        int count = 0;                    // Ініціалізація лічильника парних чисел для поточного рядка
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для перевірки кожного елемента рядка
            if (arr[i][j] % 2 == 0) {     // Перевірка, чи є елемент парним (остача від ділення на 2 дорівнює 0)
                count++;                  // Збільшення лічильника парних чисел
            }
        }
        cout << "Рядок " << i + 1 << ": кількість парних чисел = " << count << endl; // Виведення кількості парних чисел у поточному рядку
    }
}

// Функція для Завдання 2: Визначити кількість парних чисел у кожному стовпчику
void task2() {
    const int m = 6, n = 4;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 6x4 для зберігання цілих чисел

    cout << "\nЗавдання 2: Введіть елементи масиву (6x4):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    for (int j = 0; j < n; j++) {         // Зовнішній цикл для обробки кожного стовпчика
        int count = 0;                    // Ініціалізація лічильника парних чисел для поточного стовпчика
        for (int i = 0; i < m; i++) {     // Внутрішній цикл для перевірки кожного елемента стовпчика
            if (arr[i][j] % 2 == 0) {     // Перевірка, чи є елемент парним (остача від ділення на 2 дорівнює 0)
                count++;                  // Збільшення лічильника парних чисел
            }
        }
        cout << "Стовпчик " << j + 1 << ": кількість парних чисел = " << count << endl; // Виведення кількості парних чисел у поточному стовпчику
    }
}

// Функція для Завдання 3: Обчислити суму елементів кожного рядка
void task3() {
    const int m = 5, n = 7;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 5x7 для зберігання цілих чисел

    cout << "\nЗавдання 3: Введіть елементи масиву (5x7):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    for (int i = 0; i < m; i++) {         // Цикл для кожного рядка
        int sum = 0;                      // Ініціалізація змінної для підсумовування елементів рядка
        for (int j = 0; j < n; j++) {     // Цикл для кожного елемента в рядку
            sum += arr[i][j];             // Додавання елемента до загальної суми
        }
        cout << "Рядок " << i + 1 << ": сума елементів = " << sum << endl; // Виведення суми елементів рядка
    }
}

// Функція для Завдання 4: Обчислити суму елементів кожного стовпця
void task4() {
    const int m = 4, n = 6;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 4x6 для зберігання цілих чисел

    cout << "\nЗавдання 4: Введіть елементи масиву (4x6):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    for (int j = 0; j < n; j++) {         // Зовнішній цикл для обробки кожного стовпчика
        int sum = 0;                      // Ініціалізація змінної для підсумовування елементів стовпця
        for (int i = 0; i < m; i++) {     // Внутрішній цикл для кожного елемента стовпця
            sum += arr[i][j];             // Додавання елемента до загальної суми стовпця
        }
        cout << "Стовпчик " << j + 1 << ": сума елементів = " << sum << endl; // Виведення суми елементів стовпця
    }
}

// Функція для Завдання 5: Знайти максимальний елемент у масиві
void task5() {
    const int m = 3, n = 4;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 3x4 для зберігання цілих чисел

    cout << "\nЗавдання 5: Введіть елементи масиву (3x4):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    int maxVal = arr[0][0], maxRow = 0, maxCol = 0; // Ініціалізація змінних для збереження максимального елемента та його індексів
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для пошуку максимального елемента
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для перевірки кожного елемента
            if (arr[i][j] > maxVal) {     // Якщо поточний елемент більший за максимальний
                maxVal = arr[i][j];       // Оновлення максимального значення
                maxRow = i;               // Оновлення індексу рядка
                maxCol = j;               // Оновлення індексу стовпця
            }
        }
    }
    cout << "Максимальний елемент: " << maxVal << " на позиції (" << maxRow + 1 << ", " << maxCol + 1 << ")" << endl; // Виведення максимального елемента та його індексів
}

// Функція для Завдання 6: Знайти мінімальний елемент у масиві
void task6() {
    const int m = 4, n = 7;   // Оголошення розмірів масиву: m - кількість рядків, n - кількість стовпчиків
    int arr[m][n];            // Створення двовимірного масиву розміром 4x7 для зберігання цілих чисел

    cout << "\nЗавдання 6: Введіть елементи масиву (4x7):" << endl; // Виведення інструкції для введення елементів масиву
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для проходу по рядках
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для проходу по стовпчиках
            cin >> arr[i][j];             // Зчитування елемента масиву з клавіатури
        }
    }

    int minVal = arr[0][0], minRow = 0, minCol = 0; // Ініціалізація змінних для збереження мінімального елемента та його індексів
    for (int i = 0; i < m; i++) {         // Зовнішній цикл для пошуку мінімального елемента
        for (int j = 0; j < n; j++) {     // Внутрішній цикл для перевірки кожного елемента
            if (arr[i][j] < minVal) {     // Якщо поточний елемент менший за мінімальний
                minVal = arr[i][j];       // Оновлення мінімального значення
                minRow = i;               // Оновлення індексу рядка
                minCol = j;               // Оновлення індексу стовпця
            }
        }
    }
    cout << "Мінімальний елемент: " << minVal << " на позиції (" << minRow + 1 << ", " << minCol + 1 << ")" << endl; // Виведення мінімального елемента та його індексів
}

// Головна функція програми
int main() {
    task1(); // Виклик функції для виконання Завдання 1
    task2(); // Виклик функції для виконання Завдання 2
    task3(); // Виклик функції для виконання Завдання 3
    task4(); // Виклик функції для виконання Завдання 4
    task5(); // Виклик функції для виконання Завдання 5
    task6(); // Виклик функції для виконання Завдання 6
    return 0; // Повернення 0, що означає успішне завершення програми
}
