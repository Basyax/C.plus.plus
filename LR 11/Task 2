#include <iostream>  // Підключаємо бібліотеку для вводу та виводу даних
using namespace std;  // Використовуємо стандартний простір імен для зручності

// Оголошення структури Date для зберігання годин та хвилин
struct Date {
    int hours;    // Поле для зберігання годин
    int minutes;  // Поле для зберігання хвилин
};

// Функція для коригування часу (годин та хвилин), щоб не було більше 24 годин і 60 хвилин
void correctTime(Date& time) {
    if (time.hours >= 24) {  // Якщо кількість годин більше або дорівнює 24
        time.hours = time.hours % 24;  // Оновлюємо години, залишаючи лише залишок від ділення на 24
    }
    if (time.minutes >= 60) {  // Якщо кількість хвилин більше або дорівнює 60
        time.hours += time.minutes / 60;  // Додаємо до годин кількість годин, що входять в хвилини
        time.minutes = time.minutes % 60;  // Оновлюємо хвилини, залишаючи залишок від ділення на 60
    }
}

// Головна функція програми
int main() {
    Date startTime, endTime, duration;  // Оголошуємо змінні для зберігання часу початку, завершення та тривалості події
    // Введення часу початку події
    do {
        cout << "Введіть години початку (0-23): ";  // Запитуємо години початку події
        cin >> startTime.hours;  // Зчитуємо години початку
        if (startTime.hours < 0 || startTime.hours > 23) {  // Перевірка на допустимі значення годин
            cout << "Невірне значення годин! Введіть число від 0 до 23." << endl;  // Помилка при неправильному введенні годин
        }
    } while (startTime.hours < 0 || startTime.hours > 23);  // Цикл повторюється, якщо значення годин не коректне

    do {
        cout << "Введіть хвилини початку (0-59): ";  // Запитуємо хвилини початку події
        cin >> startTime.minutes;  // Зчитуємо хвилини початку
        if (startTime.minutes < 0 || startTime.minutes > 59) {  // Перевірка на допустимі значення хвилин
            cout << "Невірне значення хвилин! Введіть число від 0 до 59." << endl;  // Помилка при неправильному введенні хвилин
        }
    } while (startTime.minutes < 0 || startTime.minutes > 59);  // Цикл повторюється, якщо значення хвилин не коректне

    // Введення часу завершення події
    do {
        cout << "Введіть години завершення (0-23): ";  // Запитуємо години завершення події
        cin >> endTime.hours;  // Зчитуємо години завершення
        if (endTime.hours < 0 || endTime.hours > 23) {  // Перевірка на допустимі значення годин
            cout << "Невірне значення годин! Введіть число від 0 до 23." << endl;  // Помилка при неправильному введенні годин
        }
    } while (endTime.hours < 0 || endTime.hours > 23);  // Цикл повторюється, якщо значення годин не коректне

    do {
        cout << "Введіть хвилини завершення (0-59): ";  // Запитуємо хвилини завершення події
        cin >> endTime.minutes;  // Зчитуємо хвилини завершення
        if (endTime.minutes < 0 || endTime.minutes > 59) {  // Перевірка на допустимі значення хвилин
            cout << "Невірне значення хвилин! Введіть число від 0 до 59." << endl;  // Помилка при неправильному введенні хвилин
        }
    } while (endTime.minutes < 0 || endTime.minutes > 59);  // Цикл повторюється, якщо значення хвилин не коректне

    // Обчислення тривалості події
    duration.hours = endTime.hours - startTime.hours;  // Визначаємо різницю в годинах
    duration.minutes = endTime.minutes - startTime.minutes;  // Визначаємо різницю в хвилинах

    // Якщо хвилини початку більші за хвилини завершення, зменшуємо годину на 1 і коригуємо хвилини
    if (duration.minutes < 0) {
        duration.hours -= 1;  // Віднімаємо 1 годину
        duration.minutes += 60;  // Додаємо 60 хвилин
    }

    // Якщо різниця в годинах менша за 0, додаємо 24 години (якщо подія завершилася наступного дня)
    if (duration.hours < 0) {
        duration.hours += 24;  // Додаємо 24 години
    }

    // Виведення результату
    cout << "Тривалість події: ";  // Виводимо повідомлення про тривалість події
    cout << duration.hours << " год " << duration.minutes << " хв." << endl;  // Виводимо різницю в годинах та хвилинах

    return 0;  // Завершення програми
}
