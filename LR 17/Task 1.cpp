#include <iostream>    
// Підключаємо стандартну бібліотеку для вводу/виводу з консолі.
// В ній містяться визначення об’єктів cin, cout, cerr та інших.
// Без цього неможливо використовувати cout і cin.

#include <cmath>       
// Підключаємо бібліотеку з математичними функціями.
// Тут нам потрібна функція sqrt(), яка обчислює квадратний корінь числа.

using namespace std;   
// Вказуємо компілятору, що ми хочемо використовувати простір імен std за замовчуванням.
// Це дозволяє писати просто cout, cin замість std::cout, std::cin.


// Оголошення функції isPrime, яка приймає ціле число і повертає логічне значення (true або false).
bool isPrime(int num) {
    // Перевірка, чи число менше або рівне 1.
    // Визначення простих чисел: простим вважається число більше 1, яке ділиться лише на 1 і на себе.
    if (num <= 1) {       
        // Якщо число 0, 1 або від’ємне — воно не може бути простим.
        return false;   // Повертаємо false — число не є простим.
    }

    // Обчислюємо цілу частину квадратного кореня з числа num.
    // Чому? Бо якщо число має дільник більший за sqrt(num), тоді обов’язково буде дільник менший за sqrt(num).
    int limit = static_cast<int>(sqrt(num));  

    // Запускаємо цикл для перевірки можливих дільників від 2 до limit (включно).
    for (int i = 2; i <= limit; i++) {
        // Перевірка: чи ділиться num на i без остачі.
        // Оператор % — остача від ділення. Якщо num % i == 0, ділення націло.
        if (num % i == 0) {    
            // Якщо знайшли дільник — число не просте.
            return false;     // Повертаємо false.
        }
    }

    // Якщо не знайшли жодного дільника (крім 1 і самого числа),
    // то число просте.
    return true;     
}


int main() {
    int number;   // Оголошення змінної number для збереження введеного користувачем числа.

    cout << "Введіть число для перевірки: ";  // Виводимо повідомлення у консоль.
    cin >> number;      // Зчитуємо число, введене користувачем, і записуємо у змінну number.

    // Виклик функції isPrime з аргументом number.
    // Якщо функція повертає true, виводимо повідомлення, що число просте.
    if (isPrime(number)) {
        cout << number << " є простим числом.\n";
    } else {
        // Якщо функція повертає false, виводимо, що число не просте.
        cout << number << " не є простим числом.\n";
    }

    return 0;  // Повертаємо 0, що означає успішне завершення програми.
}
