#include <iostream> // Підключаємо бібліотеку для введення та виведення (cout, cin)
#include <ctime>    // Підключаємо бібліотеку для роботи з часом і датами (time_t, tm, time, localtime)
using namespace std; // Щоб використовувати стандартні імена (cout, endl) без префіксу std::

struct Date {       // Оголошуємо структуру для зберігання дати
    int year;       // Рік (наприклад, 2006)
    int month;      // Місяць (від 1 до 12)
    int day;        // День місяця (від 1 до 31)
};

bool isLeap(int year) { // Функція перевіряє, чи є рік високосним
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0); // Умова високосного року
    // Високосний рік — ділиться на 4 і не ділиться на 100, або ділиться на 400
}

int monthLength(int year, int month) { // Функція повертає кількість днів у заданому місяці конкретного року
    int daysInMonth[] = {31, 28, 31, 30, 31, 30,  // Масив днів для кожного місяця (звичайний рік)
                         31, 31, 30, 31, 30, 31}; // Індекси: 0 = січень, 1 = лютий, ..., 11 = грудень
    if (month == 2 && isLeap(year)) return 29;   // Якщо лютий і рік високосний — повертаємо 29
    return daysInMonth[month - 1];               // Інакше повертаємо кількість днів з масиву (month-1 бо масив з 0)
}

Date today() {                            // Функція today повертає поточну дату у вигляді структури Date
    time_t t = time(NULL);                // Отримуємо поточний час у секундах з 01.01.1970
    tm* tl = localtime(&t);               // Перетворюємо час у локальну дату (структура tm)
    Date now;                             // Створюємо об'єкт типу Date
    now.year = tl->tm_year + 1900;        // tm_year — роки від 1900, тому додаємо 1900
    now.month = tl->tm_mon + 1;           // tm_mon — місяці з 0 до 11, тому додаємо 1
    now.day = tl->tm_mday;                // День місяця з поля tm
    return now;                           // Повертаємо поточну дату
}

bool isLater(Date d1, Date d2) {                       // Функція перевіряє, чи d1 пізніше за d2
    if (d1.year > d2.year) return true;                // Якщо рік d1 більший — вона пізніше
    if (d1.year == d2.year && d1.month > d2.month) return true; // Якщо роки однакові, але місяць більший
    if (d1.year == d2.year && d1.month == d2.month && d1.day > d2.day) return true; // Якщо дні більші
    return false;                                      // В інших випадках — ні
}

int daysBetween(Date d1, Date d2) {               // Функція підраховує кількість днів між двома датами
    if (isLater(d1, d2)) swap(d1, d2);            // Якщо d1 пізніше за d2 — міняємо місцями
    int days = 0;                                 // Ініціалізуємо лічильник днів
    while (d1.year < d2.year || d1.month < d2.month || d1.day < d2.day) {
        d1.day++;                                 // Переходимо до наступного дня
        if (d1.day > monthLength(d1.year, d1.month)) { // Якщо день перевищив кількість днів у місяці
            d1.day = 1;                            // Скидаємо день
            d1.month++;                            // Переходимо до наступного місяця
        }
        if (d1.month > 12) {                       // Якщо місяць перевищив 12 (грудень)
            d1.month = 1;                          // Скидаємо місяць
            d1.year++;                             // Переходимо до наступного року
        }
        days++;                                    // Збільшуємо лічильник днів
    }
    return days;                                   // Повертаємо кількість днів між датами
}

int main() {                                       // Головна функція, з якої починається виконання програми
    Date birthday = {2006, 8, 12};                 // Задаємо дату народження: 12 серпня 2006 року
    Date now = today();                            // Отримуємо поточну дату за допомогою функції today()

    if (isLeap(now.year)) {                        // Якщо поточний рік високосний
        cout << "Поточний рік " << now.year << " — високосний." << endl; // Виводимо повідомлення
    } else {
        cout << "Поточний рік " << now.year << " — не високосний." << endl; // В іншому випадку — інше повідомлення
    }

    int days = daysBetween(birthday, now);         // Обчислюємо кількість днів між днем народження та сьогодні
    cout << "З дня народження ("                   // Виводимо дату народження
         << birthday.year << "-" << birthday.month << "-" << birthday.day 
         << ") пройшло " << days << " днів." << endl; // І результат у днях

    return 0;                                      // Повертаємо 0 — сигнал успішного завершення програми
}
